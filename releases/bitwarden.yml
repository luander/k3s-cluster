---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: bitwarden
  namespace: bitwarden
spec:
  releaseName: bitwarden
  chart:
    repository: https://k8s-at-home.com/charts
    name: bitwardenrs
    version: 1.0.0
  values:
    replicaCount: 1

    image:
      repository: bitwardenrs/server
      pullPolicy: IfNotPresent
      tag: 1.16.3

    bitwardenrs:
      domain: "https://bitwarden.kube.luander.net"
      signupsAllowed: false
      websockets:
        enabled: true
        port: 3012
      admin:
        enabled: true
        disableAdminToken: false
        existingSecret:
          enabled: false
          name: ""
          tokenKey: ""
      # Enable SMTP. https://github.com/dani-garcia/bitwarden_rs/wiki/SMTP-configuration
      smtp:
        enabled: false
        # SMTP hostname, required if SMTP is enabled
        host: "mail.gandi.net"
        # SMTP sender e-mail address, required if SMTP is enabled
        from: "noreply@luander.net"
        # SMTP sender name, defaults to 'Bitwarden_RS'
        fromName: "Bitwarden"
        # Enable SSL connection
        ssl: true
        # SMTP port
        port: 587
        # Use existing secret for SMTP authentication
        existingSecret:
          enabled: true
          name: "bitwardensmtp"
          userKey: "username"
          passwordKey: "password"

    env:
    - name: YUBICO_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: bitwardenyubikey
          key: clientid
    - name: YUBICO_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: bitwardenyubikey
          key: secret
    - name: SMTP_USERNAME
      valueFrom:
        secretKeyRef:
          name: bitwardensmtp
          key: username
    - name: SMTP_PASSWORD
      valueFrom:
        secretKeyRef:
          name: bitwardensmtp
          key: password
    - name: SMTP_HOST
      value: "mail.gandi.net"
    - name: SMTP_FROM
      value: "noreply@luander.net"
    - name: SMTP_PORT
      value: 587
    - name: SMTP_SSL
      value: true
    - name: SMTP_FROM_NAME
      value: "Bitwarden"

    persistence:
      type: statefulset
      enabled: false
      size: 1Gi
      accessMode: ReadWriteOnce
      ## Persistent Volume storage class
      # storageClass: "-"
      ## Use existing Persistent Volume Claim
      # existingClaim:

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: ClusterIP
      port: 80
      ## Provide any additional annotations which may be required. This can be used to
      ## set the LoadBalancer service type to internal only.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      annotations: {}
      labels: {}
      additionalSpec: {}

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
      - host: "bitwarden.kube.luander.net"
        paths:
        - "/"
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}
