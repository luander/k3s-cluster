---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: metrics
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 14.3.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  timeout: 20m
  values: 
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'null'
          routes:
          - match:
              alertname: Watchdog
            receiver: 'null'
          - receiver: 'slack'
            match_re:
              # severity: critical|warning
              severity: critical
            continue: true
        receivers:
        - name: 'null'
        - name: 'slack'
          slack_configs:
          - channel: '#kubernetes'
            icon_url: https://avatars3.githubusercontent.com/u/3380462
            username: 'Prometheus'
            send_resolved: true
            title: |-
              [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}
            text: >-
              {{ range .Alerts -}}
                *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

              {{ if ne .Annotations.summary ""}}*Summary:* {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}*Message:* {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}*Description:* {{ .Annotations.description }}{{ end }}

              *Details:*
                {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                {{ end }}
              {{ end }}
        templates:
        - '/etc/alertmanager/config/*.tmpl'
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
        hosts:
        - "alert-manager.kube.luander.net"
      alertmanagerSpec:
        storage:
        volumeClaimTemplate:
          spec:
            storageClassName: longhorn
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 5Gi
        
    grafana:
      enabled: false

    kubeEtcd:
      enabled: false

    prometheus:
      prometheusSpec:
        retention: 30d
        walCompression: true
        resources: 
          requests:
            memory: 400Mi
        storageSpec:
          volumeClaimTemplate:
           spec:
             storageClassName: longhorn
             resources:
               requests:
                 storage: 20Gi
        additionalScrapeConfigs:
        - job_name: pihole_exporter
          honor_timestamps: true
          metrics_path: /metrics
          static_configs:
          - targets:
            - 10.0.0.20:9617
  valuesFrom:
  - kind: Secret
    name: "prometheus-alertmanager-secret"