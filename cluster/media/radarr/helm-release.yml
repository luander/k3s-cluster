---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: radarr
      version: 10.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: linuxserver/radarr
      pullPolicy: IfNotPresent
      tag: version-3.0.2.4552

    strategy:
      type: Recreate

    env: 
      TZ: "Europe/London"
      PUID: 1000
      PGID: 1000

    service:
      port:
        port: 7878

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/auth-url: "https://auth.devbu.io/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://auth.devbu.io/oauth2/start"
      hosts:
      - host: radarr.kube.luander.net
        paths:
        - path: /
          pathType: Prefix
      tls:
      - hosts:
        - "radarr.kube.luander.net"
      additionalIngresses:
      - enabled: true
        nameSuffix: "api"
        annotations:
          kubernetes.io/ingress.class: "nginx"
        hosts:
        - host: radarr.kube.luander.net
          paths:
          - path: /api
            pathType: Prefix
        tls:
      - hosts:
        - "radarr.kube.luander.net"

    probes:
      liveness:
        enabled: true
        ## Set this to true if you wish to specify your own livenessProbe
        custom: true
        ## The spec field contains the values for the default livenessProbe.
        ## If you selected custom: true, this field holds the definition of the livenessProbe.
        spec:
          exec:
            command:
            - /usr/bin/env
            - bash
            - -c
            - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while
              read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10

    persistence:
      config:
        enabled: true
        storageClass: "longhorn"
        accessMode: ReadWriteOnce
        size: "25Gi"
    additionalVolumeMounts:
    - name: media
      mountPath: "/media"
    additionalVolumes:
    - name: media
      persistentVolumeClaim:
        claimName: video-media
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 1500Mi