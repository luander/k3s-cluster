---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.52.4
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  values:
    deploymentStrategy:
        type: Recreate
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
    ingress:
      enabled: true
      ingressClassName: nginx
      path: /
      pathType: Prefix
      hosts:
        - "grafana.${SECRET_CLUSTER_DOMAIN}"
    persistence:
      enabled: true
      storageClassName: longhorn
      size: 3Gi
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-operated:9090
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://loki-gateway.monitoring.svc.cluster.local
          jsonData:
            maxLines: 250
    dashboards:
      default:
        prometheus-stats:
          gnetId: 2
          revision: 2
          datasource: Prometheus
        kubernetes-cluster:
          gnetId: 6417
          revision: 1
          datasource: Prometheus
        nginx-dashboard:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11315
        unifi-client-insights:
          gnetId: 11315
          revision: 8
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11311
        unifi-network-sites:
          gnetId: 11311
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        unifi-uap-insights:
          gnetId: 11314
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11312
        unifi-usw-insights:
          gnetId: 11312
          revision: 8
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter-full:
          gnetId: 1860
          revision: 30
          datasource: Prometheus
        radarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/radarr.json
          datasource: Prometheus
        sonarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/sonarr.json
          datasource: Prometheus
        pihole:
          gnetId: 10176
          revision: 2
          datasource: Prometheus
    envFromSecret: grafana-auth
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
    - natel-discrete-panel
    - pr0ps-trackmap-panel
    - grafana-piechart-panel
    - vonage-status-panel
    - grafana-worldmap-panel
    - grafana-clock-panel
    serviceMonitor:
      enabled: true
    grafana.ini:
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: true
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      server:
        root_url: "https://grafana.${SECRET_CLUSTER_DOMAIN}"
      auth.azuread:
        enabled: true
        name: Azure AD
        allow_sign_up: true
        allowed_domains: luander.net
        allowed_groups:
        scopes: openid email profile
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - amd64
