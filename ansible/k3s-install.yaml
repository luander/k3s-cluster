- name: K3s install
  hosts: all
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 2 seconds...
      ansible.builtin.pause:
        seconds: 2
  tasks:
    - name: Install Kubernetes
      ansible.builtin.include_role:
        name: xanmanning.k3s
        public: true

    - name: Get a list of all nodes
      ansible.builtin.set_fact:
        worker_nodes: |
          {% set servers = [] %}
          {% for host in groups.k3s_cluster %}
          {% set control = hostvars[host]['k3s_control_node'] | default(false) %}
          {% if control == false %}
          {% if servers.append(hostvars[host]['inventory_hostname']) %}{% endif %}
          {% endif %}
          {% endfor %}
          {{ servers }}

    - name: Pause for 30 seconds to wait for cluster to catch up
      ansible.builtin.pause:
        seconds: 30

    - name: add label to existing namespace
      kubernetes.core.k8s:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        state: patched
        kind: Node
        name: "{{ item  }}"
        definition:
          metadata:
            labels:
              node-role.kubernetes.io/worker: 'true'
              k3s-upgrade: 'true'
      when:
        - k3s_primary_control_node
      loop: "{{ worker_nodes }}"

    - name: Store temporary kubeconfig into /tmp/k3s.yaml
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /tmp/k3s.yaml
        flat: true
      when:
        - k3s_primary_control_node

    - name: Wait for custom manifests to rollout
      kubernetes.core.k8s_info:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        kind: "{{ item.kind }}"
        name: "{{ item.name }}"
        namespace: "{{ item.namespace | default('') }}"
        wait: true
        wait_sleep: 10
        wait_timeout: 360
      loop:
        - { name: flux-system, kind: Namespace }
        - { name: sops-secret, kind: Secret, namespace: flux-system }
        - { name: azkv-credentials, kind: Secret, namespace: kube-system }
      when:
        - k3s_primary_control_node
        - (k3s_server_manifests_templates | length > 0
            or k3s_server_manifests_urls | length > 0)
